#!/bin/bash

usage()
{
    echo "usage:  bash deploy/run.sh [-a] | [-u] | [-d] | [-s] | [-m]"
}

if [ $# -gt 0 ]; then
    echo ''
else
    SETUP_ALL=1
fi


LAST_OPTION='';
SETUP_MODULES=''
while [ "$1" != "" ]; do
    case $1 in
        -a | --all | -u | --upgrade )       
            SETUP_ALL=1
            ;;
        -d | --di )
            SETUP_DI=1
            ;;
        -s | --static-content )
            SETUP_STATIC_CONTENT=1
            ;;
        -m | --modules )
            #do nothing here
            ;;
        -h | --help )
            usage
            exit
            ;;
        * )
            if [ "$LAST_OPTION" != -m ] && [ "$LAST_OPTION" != --modules ]; then
                usage
                exit 1
            else
                SETUP_MODULES="$SETUP_MODULES $1"
                shift
                continue
            fi
    esac
    LAST_OPTION=$1
    shift
done

if [ "$SETUP_MODULES" ]; then
    SETUP_ALL=1
fi

MDIR="$PWD"
DIR="$PWD/deploy"
cd $DIR
INSTANCE="$PWD/instance"

SEK=SECONDS
echo 'Remove old files ...'
rm -rf $INSTANCE
echo 'Create new instance folders and files ...'
mkdir -p $INSTANCE;
cd $INSTANCE

mkdir -p generated;
mkdir -p pub;
mkdir -p pub/static;
mkdir -p var;

cp -rf $MDIR/app app
cp -rf $MDIR/bin bin
cp -rf $MDIR/setup setup
cp -rf $MDIR/vendor vendor

# temporary copy env.php file with save cache local
rm app/etc/env.php
cp -rf $DIR/app/env.php app/etc/env.php


ln -sfn $MDIR/deploy deploy
ln -sfn $MDIR/dev dev
ln -sfn $MDIR/lib lib
ln -sfn $MDIR/phpserver phpserver


ln -sfn $MDIR/update update
ln -sfn $MDIR/composer.json composer.json
ln -sfn $MDIR/composer.lock composer.lock


if [ "$SETUP_MODULES" ]; then
    echo 'Enabling modules ...'
    $INSTANCE/bin/magento module:enable $SETUP_MODULES
	if [ $? -ne 0 ]
    then
        echo 'Enabling of module(s) failed! Abort.'
        exit 1
    fi
fi

echo 'Start deploying ...'

if [ $SETUP_ALL ] || [ $SETUP_DI ]; then
    $INSTANCE/bin/magento setup:di:compile
	if [ $? -ne 0 ]
    then
        echo 'Compilation failed! Abort.'
        exit 1
    fi
fi

if [ $SETUP_ALL ] || [ $SETUP_STATIC_CONTENT ]; then
    . "$DIR/app/static-content-deploy.sh"
	if [ $? -ne 0 ]
    then
        echo 'Deployment of static content failed! Abort.'
        exit 1
    fi
fi


if [ $SETUP_ALL ]; then
    $MDIR/bin/magento maintenance:enable
    $MDIR/bin/magento setup:upgrade
fi


if [ $SETUP_ALL ]; then
    GENERATED_FOLDERS=( "generated" "pub/static/adminhtml" "pub/static/frontend" "pub/static/deployed_version.txt" "var/view_preprocessed" )
else
    GENERATED_FOLDERS=()
    if [ $SETUP_DI ]; then
        GENERATED_FOLDERS+=( "generated")
    fi
    if [ $SETUP_STATIC_CONTENT ]; then
        GENERATED_FOLDERS+=( "pub/static/adminhtml" "pub/static/frontend" "pub/static/deployed_version.txt" "var/view_preprocessed" )
    fi
fi


echo 'Copy new files into Magento ... '
for i in "${GENERATED_FOLDERS[@]}"
do
   : 
   cp -rf $i "$MDIR/$i-deploy"
done

echo 'Replace files in Magento ... '
for i in "${GENERATED_FOLDERS[@]}"
do
   : 
   mv "$MDIR/$i" "$MDIR/$i-old-deploy"
   mv "$MDIR/$i-deploy" "$MDIR/$i"
done

echo 'Remove magento pub/static/_cache ... '
rm -rf "$MDIR/pub/static/_cache"

echo 'Replace old Magento files ... '
for i in "${GENERATED_FOLDERS[@]}"
do
   : 
   rm -rf "$MDIR/$i-old-deploy"
done

if [ $SETUP_ALL ]; then
    $MDIR/bin/magento maintenance:disable
fi

$MDIR/bin/magento c:f
